package pkg;

public class TestFinallyBlockVariableUse {
   // $QF: Could not verify finally blocks. A semaphore variable has been added to preserve control flow.
   public int test(String s, int i, int j) {
      System.out.println("a");// 5
      boolean var10 = false;

      int e;
      try {
         var10 = true;// 7
         System.out.println("b");

         try {
            i = Integer.parseInt(s) - j;// 9
            e = i;
            var10 = false;
         } catch (NumberFormatException var11) {// 13
            i = j;// 14
            throw var11;// 15
         }
      } finally {
         if (var10) {
            int id = i - j;// 18
            if (id > 0) {// 19
               this.accept(new Object[]{id, s, i, j});// 21
            }
         }
      }

      int id = i - j;
      if (id > 0) {
         this.accept(new Object[]{id, s, i, j});
      }

      return e;// 11
   }

   private boolean condition(int i) {
      return i-- > 0;// 27
   }

   private void accept(Object[] args) {
   }// 32
}

class 'pkg/TestFinallyBlockVariableUse' {
   method 'test (Ljava/lang/String;II)I' {
      0      5
      1      5
      2      5
      3      5
      4      5
      5      5
      8      10
      9      10
      a      10
      b      10
      c      10
      d      11
      10      14
      11      14
      12      14
      13      14
      14      14
      15      14
      16      14
      17      15
      18      15
      19      15
      1a      30
      1b      30
      1c      30
      1d      30
      1e      30
      1f      31
      20      31
      21      31
      24      32
      2b      32
      2c      32
      2d      32
      2e      32
      2f      32
      33      32
      37      32
      38      32
      39      32
      3a      32
      3e      32
      3f      32
      40      32
      41      32
      43      32
      46      35
      47      35
      48      35
      49      17
      4b      18
      4c      18
      4f      19
      50      23
      51      23
      52      23
      53      23
      54      23
      55      23
      56      24
      57      24
      58      24
      5c      25
      63      25
      64      25
      65      25
      66      25
      67      25
      6b      25
      6f      25
      70      25
      71      25
      72      25
      76      25
      77      25
      78      25
      79      25
      7b      25
   }

   method 'condition (I)Z' {
      1      39
      2      39
      3      39
      4      39
      c      39
   }

   method 'accept ([Ljava/lang/Object;)V' {
      0      43
   }
}

Lines mapping:
5 <-> 6
7 <-> 11
9 <-> 15
11 <-> 36
13 <-> 18
14 <-> 19
15 <-> 20
18 <-> 24
19 <-> 25
21 <-> 26
27 <-> 40
32 <-> 44
Not mapped:
23
