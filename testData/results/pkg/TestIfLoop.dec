package pkg;

import java.util.List;
import java.util.Random;

public class TestIfLoop {
   public int testCompoundCondition(int i, int j) {
      while(i > 0 && j < 3) {// 8
         if (j < 0) {// 9
            --j;// 10
            if (i > 3 && j == -2) {// 12 13
               j = 1;// 14
            }
         }

         if (i > 10) {// 19
            return i - 1;// 20 21
         }
      }

      return 3;// 25
   }

   public Object testCollection(List<Object> list) {
      while(!list.isEmpty()) {// 29
         if (list.size() <= 3) {// 30
            return list.remove(0);// 33
         }

         list.remove(3);// 31
      }

      return null;// 37
   }

   public void testCompound2(int a, int b, Random random) {
      a = random.nextInt(8) - random.nextInt(8) + a;// 41

      for(int var5 = random.nextInt(8) - random.nextInt(8) + b;// 42
         a >= 0 && a <= 20 && var5 >= 0 && var5 <= 20;// 44
         var5 -= random.nextInt(4) - random.nextInt(4)// 46
      ) {
         a -= random.nextInt(4) - random.nextInt(4);// 45
      }

   }// 48

   public int testElseIf(int i) {
      while(i > 0) {// 51
         if (i == 10) {// 52
            ++i;// 53
         } else if (i == 11) {// 54
            i += 2;// 55
         } else if (i == 12) {// 56
            --i;// 57
         } else if (i == 13) {// 58
            i /= 2;// 59
         } else {
            if (i != 14) {// 60
               throw new RuntimeException();// 63
            }

            i -= 4;// 61
         }
      }

      return 2;// 67
   }
}

class 'pkg/TestIfLoop' {
   method 'testCompoundCondition (II)I' {
      0      7
      1      7
      4      7
      5      7
      6      7
      9      8
      a      8
      d      9
      e      9
      f      9
      10      10
      11      10
      12      10
      15      10
      16      10
      17      10
      18      10
      1b      11
      1c      11
      1d      15
      1e      15
      1f      15
      20      15
      23      16
      24      16
      25      16
      27      16
      28      20
      29      20
   }

   method 'testCollection (Ljava/util/List;)Ljava/lang/Object;' {
      0      24
      1      24
      2      24
      3      24
      4      24
      5      24
      6      24
      9      25
      a      25
      b      25
      c      25
      d      25
      e      25
      f      25
      10      25
      13      29
      14      29
      15      29
      16      29
      17      29
      18      29
      19      29
      1e      26
      1f      26
      20      26
      21      26
      22      26
      23      26
      24      26
      25      26
      26      32
      27      32
   }

   method 'testCompound2 (IILjava/util/Random;)V' {
      0      36
      1      36
      2      36
      3      36
      4      36
      5      36
      6      36
      7      36
      8      36
      9      36
      a      36
      b      36
      c      36
      d      36
      e      36
      f      36
      10      38
      11      38
      12      38
      13      38
      14      38
      15      38
      16      38
      17      38
      18      38
      19      38
      1a      38
      1b      38
      1c      38
      1d      38
      1e      38
      1f      38
      20      39
      21      39
      24      39
      25      39
      26      39
      27      39
      2a      39
      2b      39
      2e      39
      2f      39
      30      39
      31      39
      35      42
      36      42
      37      42
      38      42
      39      42
      3a      42
      3b      42
      3c      42
      3d      42
      3e      42
      3f      42
      41      42
      43      40
      44      40
      45      40
      46      40
      47      40
      48      40
      49      40
      4a      40
      4b      40
      4c      40
      4d      40
      4f      40
      53      45
   }

   method 'testElseIf (I)I' {
      0      48
      1      48
      4      49
      5      49
      6      49
      7      49
      a      50
      b      50
      c      50
      10      51
      11      51
      12      51
      13      51
      16      52
      17      52
      18      52
      1c      53
      1d      53
      1e      53
      1f      53
      22      54
      23      54
      24      54
      28      55
      29      55
      2a      55
      2b      55
      2f      56
      31      56
      35      58
      36      58
      37      58
      38      58
      3b      62
      3c      62
      3d      62
      48      59
      49      66
      4a      66
   }
}

Lines mapping:
8 <-> 8
9 <-> 9
10 <-> 10
12 <-> 11
13 <-> 11
14 <-> 12
19 <-> 16
20 <-> 17
21 <-> 17
25 <-> 21
29 <-> 25
30 <-> 26
31 <-> 30
33 <-> 27
37 <-> 33
41 <-> 37
42 <-> 39
44 <-> 40
45 <-> 43
46 <-> 41
48 <-> 46
51 <-> 49
52 <-> 50
53 <-> 51
54 <-> 52
55 <-> 53
56 <-> 54
57 <-> 55
58 <-> 56
59 <-> 57
60 <-> 59
61 <-> 63
63 <-> 60
67 <-> 67
