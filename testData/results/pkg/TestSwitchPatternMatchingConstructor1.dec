package pkg;

public class TestSwitchPatternMatchingConstructor1 {
   private TestSwitchPatternMatchingConstructor1(String s) {
      System.out.println(s);// 5
   }// 6

   private TestSwitchPatternMatchingConstructor1(TestSwitchPatternMatchingConstructor1.Shape s) {
      TestSwitchPatternMatchingConstructor1.Shape var2 = s;
      byte var3 = 0;

      String var10001;
      label17:
      while(true) {
         switch(var2.typeSwitch<invokedynamic>(var2, var3)) {
         case -1:
            var10001 = "null";// 12
            break label17;
         case 0:
            TestSwitchPatternMatchingConstructor1.Triangle t = (TestSwitchPatternMatchingConstructor1.Triangle)var2;// 10
            if (!(t.calculateArea() > 100.0)) {
               var3 = 1;
               break;
            }

            var10001 = "Large triangle";
            break label17;
         case 1:
            TestSwitchPatternMatchingConstructor1.Triangle t = (TestSwitchPatternMatchingConstructor1.Triangle)var2;// 11
            var10001 = "Small triangle";
            break label17;
         default:
            var10001 = "Non-triangle";// 13
            break label17;
         }
      }

      this(var10001);// 9
   }// 15

   private abstract class Shape {
      abstract double calculateArea();
   }

   private class Triangle extends TestSwitchPatternMatchingConstructor1.Shape {
      @Override
      double calculateArea() {
         return 0.0;// 25
      }
   }
}

class 'pkg/TestSwitchPatternMatchingConstructor1' {
   method '<init> (Ljava/lang/String;)V' {
      4      4
      5      4
      6      4
      7      4
      8      4
      9      4
      a      4
      b      5
   }

   method '<init> (Lpkg/TestSwitchPatternMatchingConstructor1$Shape;)V' {
      1      8
      2      8
      3      9
      4      9
      5      14
      6      14
      7      14
      8      14
      9      14
      a      14
      b      14
      c      14
      28      19
      29      19
      2a      19
      2b      19
      2c      19
      2d      19
      2e      20
      2f      20
      30      20
      31      20
      32      20
      33      20
      34      20
      35      20
      36      20
      37      20
      3a      21
      3b      21
      3c      22
      3f      25
      40      25
      41      26
      44      28
      45      28
      46      28
      47      28
      48      28
      49      28
      4a      29
      4b      29
      4c      30
      4f      16
      50      16
      51      17
      54      32
      55      32
      56      33
      59      37
      5a      37
      5b      37
      5c      38
   }
}

class 'pkg/TestSwitchPatternMatchingConstructor1$Triangle' {
   method 'calculateArea ()D' {
      0      47
      1      47
   }
}

Lines mapping:
5 <-> 5
6 <-> 6
9 <-> 38
10 <-> 20
11 <-> 29
12 <-> 17
13 <-> 33
15 <-> 39
25 <-> 48
Not mapped:
4
